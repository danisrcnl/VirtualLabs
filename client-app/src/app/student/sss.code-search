# Query: vcpu
# ContextLines: 1

72 results - 13 files

client-app\db.json:
  181        "ramsize": 2048,
  182:       "vcpu": 2
  183      },

  191        "ramsize": 4096,
  192:       "vcpu": 1
  193      },

  201        "ramsize": 2048,
  202:       "vcpu": 1
  203      },

  211        "ramsize": 2048,
  212:       "vcpu": 1
  213      },

  221        "ramsize": 2048,
  222:       "vcpu": 1
  223      },

  231        "ramsize": 2048,
  232:       "vcpu": 1
  233      }

client-app\src\app\model\UsedResources.model.ts:
  1  export class UsedResources {
  2:     nvcpu: number;
  3      ram: number;

client-app\src\app\model\vmModelDTO.model.ts:
  2  
  3:     maxnvcpu: number;
  4      maxDisk : number;

client-app\src\app\model\vms.model.ts:
  4  
  5:     nvcpu: Number;
  6      disk: Number;

client-app\src\app\student\limit-dialog.component.html:
   9              <mat-form-field class="row_field">
  10:             <input (ngModelChange)="valuechangenvcpu($event)" matInput type="text" class="inputField" id="nvcpu" placeholder="nvcpu" autocomplete="off" formControlName="nvcpu" [(ngModel)]="data.nvcpu">
  11:             <mat-hint align="end">{{data.nVCpu}} / {{vcpu_left}}</mat-hint>
  12:             <div *ngIf="submitted && f.nvcpu.errors" class="invalid-feedback">
  13:               <div *ngIf="f.nvcpu.errors.required">Inserire il numero di Cpu </div>
  14              </div> 

  17              <div class="row_progress">
  18:               <div [ngClass]="nvcpu_consumption > 100 ? 'red' : 'blue'">
  19:               <mat-progress-spinner diameter="30" mode="determinate" [value]="nvcpu_consumption"></mat-progress-spinner>
  20                </div>

client-app\src\app\student\limit-dialog.component.ts:
   27    RAMtotal : any = 0;
   28:   alertnvcpu : string = "";
   29:   nvcputotal : any = 0;
   30    alertTOTALVMS : string = "";

   33    DISKSIZE : any = 0;
   34:   nvcpu: any;
   35    RAM: any;

   45    ram_consumption : any;
   46:   nvcpu_consumption : any;
   47    disk_consumption : any;

   49    ram_left : any;
   50:   nvcpu_left: any;
   51    disk_left: any;

   63      this.limitForm = this.formBuilder.group({
   64:       nvcpu: ['',Validators.required],
   65        RAM: ['',Validators.required],

   89      this.disk_left = (this.vmModel.maxDisk - this.used_resources.disk);
   90:     this.nvcpu_left = ((this.vmModel.maxnvcpu - this.used_resources.nvcpu));
   91  

   94      this.disk_consumption = ((this.vmModel.maxDisk - this.used_resources.disk)/this.vmModel.maxDisk)*100;
   95:     this.vcpu_consumption = ((this.vmModel.maxnvcpu - this.used_resources.vCpu)/this.vmModel.maxnvcpu)*100;
   96  

  135  
  136: valuechangenvcpu(newValue) {
  137    

  139  
  140:   this.nvcpu_consumption = this.nvcpu_consumption + ((this.vmModel.maxnvcpu - newValue)/this.vmModel.maxnvcpu)*100;
  141     

  144  
  145:     this.nvcpu_consumption = ((this.vmModel.maxnvcpu - this.used_resources.nvcpu)/this.vmModel.maxnvcpu)*100;
  146  

  165    this.alertTOTALVMS = "";
  166:   this.alertnvcpu ="";
  167  

  171    this.TOTALVMS = 0;
  172:   this.nvcputotal = 0;
  173   
  174  
  175: if (this.nvcpu < this.nvcputotal)
  176  {
  177:   this.alertnvcpu = "Limite non consentito"
  178  }

client-app\src\app\student\vmscomponent.component.html:
   1  <tr *ngFor="let vmss of vmsperteam$ | async">
   2:         <!--<i>{{ vmss.nVCpu }} {{vmss.disk}} </i>
   3  		<td></td>

  17          <mat-list role="list">
  18:             <mat-list-item role="listitem"><b>CPU virtuali</b>: {{vmss.nvcpu}} </mat-list-item>
  19              <mat-list-item role="listitem"><b>Ram</b>: {{vmss.ram}} MB </mat-list-item>

client-app\src\app\student\vmscomponentstudent.ts:
  100        
  101:       this.vm.nvcpu = data.nvcpu;
  102:       console.log(data.nvcpu);
  103:       
  104        this.vm.ram = data.ram;

client-app\src\app\teacher\limit-dialog.component.html:
  6              <mat-form-field class="text">
  7:               <input matInput type="text" placeholder="CPU virtuali" autocomplete="off" formControlName="nvcpu" [(ngModel)]="data.nvcpu">
  8              </mat-form-field>

client-app\src\app\teacher\limit-dialog.component.ts:
  21    RAMtotal : number = 0;
  22:   alertVCPU : string = "";
  23:   VCPUtotal : number = 0;
  24    alertTOTALVMS : string = "";

  28    DISKSIZE : number = 0;
  29:   VCPU: number;
  30    RAM: number;

  44      this.limitForm = this.formBuilder.group({
  45:      nvcpu: [''],
  46        RAM: [''],

  78    this.alertTOTALVMS = "";
  79:   this.alertnvcpu ="";
  80  

  84    this.TOTALVMS = 0;
  85:   this.nvcputotal =0;
  86  

  91   console.log("entrato");
  92:  console.log(this.nvcputotal);
  93:  console.log(this.nvcpu);
  94   console.log (this.activevms);
  95   console.log (this.TotalVms);
  96: if (this.nvcpu < this.nvcputotal)
  97  {
  98:   this.alertVCPU = "Limite non consentito"
  99  }

client-app\src\app\teacher\vms-contcomponent.component.ts:
   9  export interface DialogDataVm {
  10:   nvcpu  : number;
  11    RAM : number;

client-app\src\app\teacher\vmscomponent.component.html:
  14  				<mat-label>
  15: 					<h2><b>{{vmModel.maxnvcpu}} CPU virtuali</b></h2>
  16  				</mat-label>

client-app\src\app\teacher\vmscomponent.component.ts:
  12  export interface DialogDataVm {
  13:   nvcpu  : number;
  14    RAM : number;

  28  
  29:   displayedColumns: string[] = ['maxnvcpu', 'maxDisk', 'maxRam', 'operatingSystem','maxVmsForCourse','maxActiveForCourse'];
  30    

  89        
  90:       this.vmModel2.maxnvcpu = data.nvcpu;
  91        this.vmModel2.maxRam = data.RAM;
